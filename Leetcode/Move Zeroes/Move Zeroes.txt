Q. Move Zeroes

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1


A. 


class Solution {
public:
    void moveZeroes(vector<int>& nums) {

        optimal approach 
        T.c = O(n)
        S.C = O(1)

        int i =  0;
        int j = 0;
        int n = nums.size();
        for(int k =0;k<n;k++)
        {
            if(nums[k]==0)
            {
                j = k;
                i = k+1;
                break;
            }
        }
        while(i<n)
        {
            if(nums[i])
            {
               swap(nums[i],nums[j]);
               j++;
               
            }
            i++;
        }

        // Other Approach

        //  int j=0;
        // for(int i=0;i<nums.size();i++)
        // {
        //     if(nums[i])
        //     {
        //         swap(nums[i],nums[j]);
        //         j++;
        //     }
        // }

    }
};

